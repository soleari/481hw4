Found 31 issues

src/main/java/org/jsoup/select/NodeTraversor.java:50: error: NULL_DEREFERENCE
  object `node` last assigned on line 52 could be null and is dereferenced at line 50.
  48.                   depth++;
  49.               } else {
  50. >                 while (node.nextSibling() == null && depth > 0) {
  51.                       visitor.tail(node, depth);
  52.                       node = node.parentNode();

src/main/java/org/jsoup/internal/ConstrainableInputStream.java:43: error: RESOURCE_LEAK
  resource of type `org.jsoup.internal.ConstrainableInputStream` acquired by call to `ConstrainableInputStream(...)` at line 43 is not released after line 43.
**Note**: potential exception at line 43
  41.        */
  42.       public static ConstrainableInputStream wrap(InputStream in, int bufferSize, int maxSize) {
  43. >         return in instanceof ConstrainableInputStream
  44.               ? (ConstrainableInputStream) in
  45.               : new ConstrainableInputStream(in, bufferSize, maxSize);

src/main/java/org/jsoup/parser/XmlTreeBuilder.java:66: error: NULL_DEREFERENCE
  object returned by `currentElement()` could be null and is dereferenced at line 66.
  64.   
  65.       private void insertNode(Node node) {
  66. >         currentElement().appendChild(node);
  67.       }
  68.   

src/main/java/org/jsoup/select/NodeTraversor.java:96: error: NULL_DEREFERENCE
  object `node` last assigned on line 104 could be null and is dereferenced at line 96.
  94.               }
  95.               // No siblings, move upwards:
  96. >             while (node.nextSibling() == null && depth > 0) {
  97.                   // 'tail' current node:
  98.                   if (result == FilterResult.CONTINUE || result == FilterResult.SKIP_CHILDREN) {

src/main/java/org/jsoup/helper/DataUtil.java:151: error: RESOURCE_LEAK
  resource of type `java.io.InputStreamReader` acquired by call to `InputStreamReader(...)` at line 150 is not released after line 151.
**Note**: potential exception at line 151
  149.                   charsetName = defaultCharset;
  150.               BufferedReader reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);
  151. >             doc = parser.parseInput(reader, baseUri);
  152.               doc.outputSettings().charset(charsetName);
  153.           }

src/main/java/org/jsoup/nodes/Document.java:170: error: NULL_DEREFERENCE
  object `master` last assigned on line 160 could be null and is dereferenced at line 170.
  168.   
  169.               for (Node dupe : toMove)
  170. >                 master.appendChild(dupe);
  171.           }
  172.           // ensure parented by <html>

src/main/java/org/jsoup/nodes/Document.java:173: error: NULL_DEREFERENCE
  object `master` last assigned on line 160 could be null and is dereferenced at line 173.
  171.           }
  172.           // ensure parented by <html>
  173. >         if (!master.parent().equals(htmlEl)) {
  174.               htmlEl.appendChild(master); // includes remove()            
  175.           }

src/main/java/org/jsoup/helper/DataUtil.java:169: error: RESOURCE_LEAK
  resource of type `org.jsoup.internal.ConstrainableInputStream` acquired to `input` by call to `wrap(...)` at line 168 is not released after line 169.
  167.           Validate.isTrue(maxSize >= 0, "maxSize must be 0 (unlimited) or larger");
  168.           final ConstrainableInputStream input = ConstrainableInputStream.wrap(inStream, bufferSize, maxSize);
  169. >         return input.readToByteBuffer(maxSize);
  170.       }
  171.   

src/main/java/org/jsoup/select/Elements.java:182: error: NULL_DEREFERENCE
  object returned by `first()` could be null and is dereferenced at line 182.
  180.       public String val() {
  181.           if (size() > 0)
  182. >             return first().val();
  183.           else
  184.               return "";

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:531: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 531.
  529.                               tb.transition(InSelect);
  530.                       } else if (StringUtil.inSorted(name, Constants.InBodyStartOptions)) {
  531. >                         if (tb.currentElement().nodeName().equals("option"))
  532.                               tb.processEndTag("option");
  533.                           tb.reconstructFormattingElements();

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:538: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 538.
  536.                           if (tb.inScope("ruby")) {
  537.                               tb.generateImpliedEndTags();
  538. >                             if (!tb.currentElement().nodeName().equals("ruby")) {
  539.                                   tb.error(this);
  540.                                   tb.popStackToBefore("ruby"); // i.e. close up to but not include name

src/main/java/org/jsoup/parser/HtmlTreeBuilder.java:259: error: NULL_DEREFERENCE
  object returned by `currentElement()` could be null and is dereferenced at line 259.
  257.           Node node;
  258.           // characters in script and style go in as datanodes, not text nodes
  259. >         final String tagName = currentElement().tagName();
  260.           final String data = characterToken.getData();
  261.   

src/main/java/org/jsoup/parser/HtmlTreeBuilder.java:278: error: NULL_DEREFERENCE
  object returned by `currentElement()` could be null and is dereferenced at line 278.
  276.               insertInFosterParent(node);
  277.           else
  278. >             currentElement().appendChild(node);
  279.   
  280.           // connect form controls to their form element

src/main/java/org/jsoup/parser/HtmlTreeBuilder.java:575: error: NULL_DEREFERENCE
  object returned by `currentElement()` could be null and is dereferenced at line 575.
  573.        */
  574.       void generateImpliedEndTags(String excludeTag) {
  575. >         while ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) &&
  576.                   inSorted(currentElement().nodeName(), TagSearchEndTags))
  577.               pop();

src/main/java/org/jsoup/parser/HtmlTreeBuilder.java:576: error: NULL_DEREFERENCE
  object returned by `currentElement()` could be null and is dereferenced at line 576.
  574.       void generateImpliedEndTags(String excludeTag) {
  575.           while ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) &&
  576. >                 inSorted(currentElement().nodeName(), TagSearchEndTags))
  577.               pop();
  578.       }

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:774: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 774.
  772.                   if (node.nodeName().equals(name)) {
  773.                       tb.generateImpliedEndTags(name);
  774. >                     if (!name.equals(tb.currentElement().nodeName()))
  775.                           tb.error(this);
  776.                       tb.popStackToClose(name);

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:887: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 887.
  885.                   return true; // todo: as above todo
  886.               } else if (t.isEOF()) {
  887. >                 if (tb.currentElement().nodeName().equals("html"))
  888.                       tb.error(this);
  889.                   return true; // stops parsing

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:897: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 897.
  895.               tb.error(this);
  896.               boolean processed;
  897. >             if (StringUtil.in(tb.currentElement().nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {
  898.                   tb.setFosterInserts(true);
  899.                   processed = tb.process(t, InBody);

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:926: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 926.
  924.                                   // InTable anything else section:
  925.                                   tb.error(this);
  926. >                                 if (StringUtil.in(tb.currentElement().nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {
  927.                                       tb.setFosterInserts(true);
  928.                                       tb.process(new Token.Character().data(character), InBody);

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:954: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 954.
  952.                   } else {
  953.                       tb.generateImpliedEndTags();
  954. >                     if (!tb.currentElement().nodeName().equals("caption"))
  955.                           tb.error(this);
  956.                       tb.popStackToClose("caption");

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1007: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1007.
  1005.                       Token.EndTag endTag = t.asEndTag();
  1006.                       if (endTag.normalName.equals("colgroup")) {
  1007. >                         if (tb.currentElement().nodeName().equals("html")) { // frag case
  1008.                               tb.error(this);
  1009.                               return false;

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1018: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1018.
  1016.                       break;
  1017.                   case EOF:
  1018. >                     if (tb.currentElement().nodeName().equals("html"))
  1019.                           return true; // stop parsing; frag case
  1020.                       else

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1089: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1089.
  1087.               }
  1088.               tb.clearStackToTableBodyContext();
  1089. >             tb.processEndTag(tb.currentElement().nodeName()); // tbody, tfoot, thead
  1090.               return tb.process(t);
  1091.           }

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1173: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1173.
  1171.                       }
  1172.                       tb.generateImpliedEndTags();
  1173. >                     if (!tb.currentElement().nodeName().equals(name))
  1174.                           tb.error(this);
  1175.                       tb.popStackToClose(name);

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1241: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1241.
  1239.                           return tb.process(start, InBody);
  1240.                       else if (name.equals("option")) {
  1241. >                         if (tb.currentElement().nodeName().equals("option"))
  1242.                               tb.processEndTag("option");
  1243.                           tb.insert(start);

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1245: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1245.
  1243.                           tb.insert(start);
  1244.                       } else if (name.equals("optgroup")) {
  1245. >                         if (tb.currentElement().nodeName().equals("option"))
  1246.                               tb.processEndTag("option");
  1247.                           else if (tb.currentElement().nodeName().equals("optgroup"))

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1270: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1270.
  1268.                       switch (name) {
  1269.                           case "optgroup":
  1270. >                             if (tb.currentElement().nodeName().equals("option") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals("optgroup"))
  1271.                                   tb.processEndTag("option");
  1272.                               if (tb.currentElement().nodeName().equals("optgroup"))

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1278: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1278.
  1276.                               break;
  1277.                           case "option":
  1278. >                             if (tb.currentElement().nodeName().equals("option"))
  1279.                                   tb.pop();
  1280.                               else

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1297: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1297.
  1295.                       break;
  1296.                   case EOF:
  1297. >                     if (!tb.currentElement().nodeName().equals("html"))
  1298.                           tb.error(this);
  1299.                       break;

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1384: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1384.
  1382.                   }
  1383.               } else if (t.isEndTag() && t.asEndTag().normalName().equals("frameset")) {
  1384. >                 if (tb.currentElement().nodeName().equals("html")) { // frag
  1385.                       tb.error(this);
  1386.                       return false;

src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java:1394: error: NULL_DEREFERENCE
  object returned by `tb.currentElement()` could be null and is dereferenced at line 1394.
  1392.                   }
  1393.               } else if (t.isEOF()) {
  1394. >                 if (!tb.currentElement().nodeName().equals("html")) {
  1395.                       tb.error(this);
  1396.                       return true;

Summary of the reports

  NULL_DEREFERENCE: 28
     RESOURCE_LEAK: 3